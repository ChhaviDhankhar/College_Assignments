ques1:
#include <bits/stdc++.h>
using namespace std;
 
void insert_at_bottom(stack<int>& st, int x)
{
 
    if (st.size() == 0) {
        st.push(x);
    }
    else {
 
       
 
        int a = st.top();
        st.pop();
        insert_at_bottom(st, x);
 
       
        st.push(a);
    }
}
 

void reverse(stack<int>& st)
{
    if (st.size() > 0) {
 
       
        int x = st.top();
        st.pop();
        reverse(st);
 
        
        insert_at_bottom(st, x);
    }
    return;
}
 
// Driver Code
int main()

{   int n;   
    cin>> n;
    stack<int> st, st2;
   
    for (int i = 1; i <= n; i++) {
        st.push(i);
    }
 
    st2 = st;
 
    
   
    while (!st2.empty()) {
        cout << st2.top() << " ";
        st2.pop();
    }
    cout<<endl;
   
   
    reverse(st);
   
   
    while (!st.empty()) {
        cout << st.top() << " ";
        st.pop();
    }
    return 0;
}




ques 2:

#include <bits/stdc++.h>
using namespace std;
 
void permute(string ip, string op)
{
    
    if (ip.size() == 0) {
        cout << op << " ";
        return;
    }
    
    char ch = tolower(ip[0]);
    char ch2 = toupper(ip[0]);
    ip = ip.substr(1);
 
    permute(ip, op + ch);
    permute(ip, op + ch2);
}
int main()
{
    string ip;
    cin >> ip;
    permute(ip, "");
    return 0;
}

